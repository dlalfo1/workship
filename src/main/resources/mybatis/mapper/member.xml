<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @Mapper를 지정한다. -->
<mapper namespace="com.gdu.workship.mapper.MemberMapper">

  <resultMap type="MemberDTO" id="MemberMap">
    <id column="MEMBER_NO" property="memberNo"/>
    <result column="MEMBER_NAME" property="memberName"/>
    <result column="EMAIL_ID" property="emailId"/>
    <result column="TEL" property="tel"/>
    <result column="BIRTHDAY" property="birthday"/>
    <result column="JOINED_AT" property="joinedAt"/>
    <result column="MODIFIED_AT" property="modifiedAt"/>
    <result column="STATUS" property="status"/>
    <result column="DAYOFF_COUNT" property="dayoffCount"/>
    <result column="PW" property="pw"/>
    <result column="PROFILE_FILE_PATH" property="profileFilePath"/>
    <result column="PROFILE_FILE_NAME" property="profileFileName"/>
    <association javaType="JobDTO" property="jobDTO">
      <id column="JOB_NO" property="jobNo"/>
      <result column="JOB_NAME" property="jobName"/>
    </association>
    <association javaType="DepartmentDTO" property="departmentDTO">
      <id column="DEPT_NO" property="deptNo"/>
      <result column="DEPT_NAME" property="deptName"/>
    </association>
  </resultMap>

  <select id="getDeptList" resultType="DepartmentDTO">
    SELECT DEPT_NO, DEPT_NAME
      FROM DEPARTMENT_T
  </select>
  <select id="getMemberCount" resultType="int">
    SELECT COUNT(*)
      FROM MEMBER_T
  </select>
  <select id="getMemberList" parameterType="Map" resultMap="MemberMap">
    SELECT A.MEMBER_NO, A.MEMBER_NAME, A.EMAIL_ID, A.TEL, A.BIRTHDAY, A.JOINED_AT, A.MODIFIED_AT, A.STATUS, A.DAYOFF_COUNT, A.PW, A.PROFILE_FILE_PATH, A.PROFILE_FILE_NAME, A.DEPT_NO, A.DEPT_NAME, A.JOB_NO, A.JOB_NAME
    FROM (SELECT M.MEMBER_NO, M.MEMBER_NAME, M.EMAIL_ID, M.TEL, M.BIRTHDAY, M.JOINED_AT, M.MODIFIED_AT, M.STATUS, M.DAYOFF_COUNT, M.PW, M.PROFILE_FILE_PATH, M.PROFILE_FILE_NAME, D.DEPT_NO, D.DEPT_NAME, J.JOB_NO, J.JOB_NAME
            FROM MEMBER_T M INNER JOIN DEPARTMENT_T D
            ON D.DEPT_NO = M.DEPT_NO INNER JOIN JOB_T J
            ON J.JOB_NO = M.JOB_NO
           <where>
             <!-- 전달된 column 그대로 부를 수 있다. mybatis.org 동적 sql 참고-->
             <if test="column != '' and query != ''">
               ${column} LIKE CONCAT('%', #{query}, '%')
             </if>
           </where>) A
    <choose>
      <when test="coulum != ''">
        ORDER BY ${column} ASC
      </when>
      <otherwise>
        ORDER BY M.MEMBER_NO ASC
      </otherwise>
    </choose>
    LIMIT #{begin}, #{recordPerPage} 
  </select>

  <select id="getMemberSearchCount" parameterType="Map" resultType="int">
    SELECT COUNT(M.MEMBER_NO)
      FROM MEMBER_T M LEFT OUTER JOIN DEPARTMENT_T D
        ON D.DEPT_NO = M.DEPT_NO
    <where>
      <if test="column != '' and query != ''">
        ${column} LIKE CONCAT('%', #{query}, '%')
      </if>
    </where>
  </select>
  
  <select id="selectDept" parameterType="int" resultType="DepartmentDTO">
    SELECT DEPT_NO, DEPT_NAME
      FROM DEPARTMENT_T
     WHERE DEPT_NO = #{deptNo}
  </select>
  <select id="selectJob" parameterType="int" resultType="JobDTO">
    SELECT JOB_NO, JOB_NAME
      FROM JOB_T
     WHERE JOB_NO = #{jobNo}
  </select>
  
  <insert id="createMember" parameterType="MemberDTO">
    INSERT INTO MEMBER_T(
           DEPT_NO
         , JOB_NO
         , MEMBER_NAME
         , EMAIL_ID
         , TEL
         , BIRTHDAY
         , JOINED_AT
         , MODIFIED_AT
         , STATUS
         , DAYOFF_COUNT
         , PW
         , PROFILE_FILE_PATH
         , PROFILE_FILE_NAME)
    VALUES(
           #{departmentDTO.deptNo}
         , #{jobDTO.jobNo}
         , #{memberName}
         , #{emailId}
         , #{tel}
         , #{birthday}
         , NOW()
         , NULL
         , 0
         , NULL
         , #{pw}
         , #{profileFilePath}
         , #{profileFileName});
  </insert>

  <select id="getMemberByNo" parameterType="int" resultMap="MemberMap">
    SELECT M.MEMBER_NO, M.DEPT_NO, M.JOB_NO, M.MEMBER_NAME, M.EMAIL_ID, M.TEL, M.BIRTHDAY, M.JOINED_AT, M.MODIFIED_AT, M.STATUS, M.DAYOFF_COUNT, M.PW, M.PROFILE_FILE_PATH, M.PROFILE_FILE_NAME, D.DEPT_NAME, J.JOB_NAME
      FROM MEMBER_T M LEFT OUTER JOIN DEPARTMENT_T D
        ON D.DEPT_NO = M.DEPT_NO LEFT OUTER JOIN JOB_T J
        ON M.JOB_NO = J.JOB_NO
     WHERE M.MEMBER_NO = #{memberNo}
  </select>
  
  <update id="modifyMember" parameterType="MemberDTO">
    UPDATE MEMBER_T
       SET
           MEMBER_NAME = #{memberName}
         , TEL = #{tel}
         , BIRTHDAY = #{birthday}
         , DEPT_NO = #{departmentDTO.deptNo}
         , JOB_NO = #{jobDTO.jobNo}
         , MODIFIED_AT = NOW()
         , STATUS = #{status}
         , PW = #{pw}
         <if test="profileFilePath != null and profileFileName != null">
         , PROFILE_FILE_PATH = #{profileFilePath}
         , PROFILE_FILE_NAME = #{profileFileName}
         </if>
     WHERE MEMBER_NO = #{memberNo}
  </update>
  
  <delete id="removeMember" parameterType="int">
    DELETE
      FROM MEMBER_T
     WHERE MEMBER_NO = #{memberNo}
  </delete>
  
</mapper>