<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @Mapper를 지정한다. -->
<mapper namespace="com.gdu.workship.mapper.NoticeBoardMapper">

  <resultMap type="NoticeDTO" id="NoticeMap">
    <id column="NOTICE_NO" property="noticeNo"/>
    <result column="NOTICE_TITLE" property="noticeTitle"/>
    <result column="NOTICE_CONTENT" property="noticeContent"/>
    <result column="NOTICE_CREATED_AT" property="noticeCreatedAt"/>
    <result column="NOTICE_MODIFIED_AT" property="noticeModifiedAt"/>
    <result column="NOTICE_HIT" property="noticeHit"/>
    <result column="NOTICE_STATE" property="noticeState"/>
    <association javaType="MemberDTO" property="memberDTO">
      <id column="MEMBER_NO" property="memberNo"/>
      <result column="MEMBER_NAME" property="memberName"/>
      <result column="EMAIL_ID" property="emailId"/>
      <result column="TEL" property="tel"/>
      <result column="BIRTHDAY" property="birthday"/>
      <result column="JOINED_AT" property="joinedAt"/>
      <result column="MODIFIED_AT" property="modifiedAt"/>
      <result column="STATUS" property="status"/>
      <result column="DAYOFF_COUNT" property="dayoffCount"/>
      <result column="PW" property="pw"/>
      <result column="PROFILE_FILE_PATH" property="profileFilePath"/>
      <result column="PROFILE_FILE_NAME" property="profileFileName"/>
      <association javaType="JobDTO" property="jobDTO">
        <id column="JOB_NO" property="jobNo"/>
        <result column="JOB_NAME" property="jobName"/>
      </association>
      <association javaType="DepartmentDTO" property="departmentDTO">
        <id column="DEPT_NO" property="deptNo"/>
        <result column="DEPT_NAME" property="deptName"/>
      </association>
    </association>
  </resultMap>
  
  <resultMap type="MemberDTO" id="MemberMap">
    <id column="MEMBER_NO" property="memberNo"/>
    <result column="MEMBER_NAME" property="memberName"/>
    <result column="EMAIL_ID" property="emailId"/>
    <result column="TEL" property="tel"/>
    <result column="BIRTHDAY" property="birthday"/>
    <result column="JOINED_AT" property="joinedAt"/>
    <result column="MODIFIED_AT" property="modifiedAt"/>
    <result column="STATUS" property="status"/>
    <result column="DAYOFF_COUNT" property="dayoffCount"/>
    <result column="PW" property="pw"/>
    <result column="PROFILE_FILE_PATH" property="profileFilePath"/>
    <result column="PROFILE_FILE_NAME" property="profileFileName"/>
    <association javaType="JobDTO" property="jobDTO">
      <id column="JOB_NO" property="jobNo"/>
      <result column="JOB_NAME" property="jobName"/>
    </association>
    <association javaType="DepartmentDTO" property="departmentDTO">
      <id column="DEPT_NO" property="deptNo"/>
      <result column="DEPT_NAME" property="deptName"/>
    </association>
  </resultMap>
  
  <resultMap type="NoticeFileDTO" id="NoticeFileMap">
    <id column="NOTICE_FILE_NO" property="noticeFileNo"/>
    <result column="NOTICE_FILE_PATH" property="noticeFilePath"/>
    <result column="NOTICE_FILE_ORIGIN_NAME" property="noticeFileOriginName"/>
    <result column="NOTICE_FILE_SYSTEM_NAME" property="noticeFileSystemName"/>
    <association javaType="NoticeDTO" property="noticeDTO">
      <id column="NOTICE_NO" property="noticeNo"/>
    </association>
  </resultMap>

  <!-- 공지사항 리스트, 검색 -->
  <select id="getMemberByEmail" parameterType="String" resultMap="MemberMap">
    SELECT A.MEMBER_NO, A.DEPT_NO, A.JOB_NO, A.MEMBER_NAME, A.EMAIL_ID, A.TEL, A.BIRTHDAY, A.JOINED_AT, A.MODIFIED_AT, A.STATUS, A.DAYOFF_COUNT, A.PW, A.PROFILE_FILE_PATH, A.PROFILE_FILE_NAME, A.DEPT_NAME, A.JOB_NAME
      FROM (SELECT M.MEMBER_NO, M.DEPT_NO, M.JOB_NO, M.MEMBER_NAME, M.EMAIL_ID, M.TEL, M.BIRTHDAY, M.JOINED_AT, M.MODIFIED_AT, M.STATUS, M.DAYOFF_COUNT, M.PW, M.PROFILE_FILE_PATH, M.PROFILE_FILE_NAME, D.DEPT_NAME, J.JOB_NAME
              FROM MEMBER_T M LEFT OUTER JOIN DEPARTMENT_T D
                ON M.DEPT_NO = D.DEPT_NO LEFT OUTER JOIN JOB_T J
                ON M.JOB_NO = J.JOB_NO) A
      WHERE EMAIL_ID = #{emailId}
  </select>
  <select id="getNoticeCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM NOTICE_BOARD_T
  </select>
  <select id="getNoticeList" parameterType="Map" resultMap="NoticeMap">
    SELECT A.NOTICE_NO, A.MEMBER_NAME, A.NOTICE_TITLE, A.NOTICE_CONTENT, A.NOTICE_CREATED_AT, A.NOTICE_MODIFIED_AT, A.NOTICE_HIT, A.NOTICE_STATE, A.JOB_NAME
      FROM (SELECT N.NOTICE_NO, M.MEMBER_NAME, N.NOTICE_TITLE, N.NOTICE_CONTENT, N.NOTICE_CREATED_AT, N.NOTICE_MODIFIED_AT, N.NOTICE_HIT, N.NOTICE_STATE, J.JOB_NAME
              FROM NOTICE_BOARD_T N INNER JOIN MEMBER_T M
                ON M.MEMBER_NO = N.MEMBER_NO INNER JOIN JOB_T J
                ON M.JOB_NO = J.JOB_NO
           <where>
           <!-- 전달된 column 그대로 부를 수 있다. mybatis.org 동적 sql 참고-->
            <if test="column != '' and query != ''">
              ${column} LIKE CONCAT('%', #{query}, '%')
            </if>
           </where>) A
     ORDER BY N.NOTICE_NO DESC
     LIMIT #{begin}, #{recordPerPage}
  </select>

  <select id="getNoticeSearchCount" parameterType="Map" resultType="int">
    SELECT COUNT(N.NOTICE_NO)
      FROM NOTICE_BOARD_T N RIGHT OUTER JOIN MEMBER_T M
        ON M.MEMBER_NO = N.MEMBER_NO
    <where>
      <if test="column != '' and query != ''">
        ${column} LIKE CONCAT('%', #{query}, '%')
      </if>
    </where>
  </select>
  
  <!-- 공지사항 조회수 -->
  <update id="increaseHit" parameterType="int">
    UPDATE NOTICE_BOARD_T
       SET NOTICE_HIT = NOTICE_HIT + 1
     WHERE NOTICE_NO = #{noticeNo}
  </update>
  
  
  <select id="getNoticeByNo" parameterType="int" resultMap="NoticeMap">
    SELECT A.NOTICE_NO, A.MEMBER_NAME, A.NOTICE_TITLE, A.NOTICE_CONTENT, A.NOTICE_CREATED_AT, A.NOTICE_MODIFIED_AT, A.NOTICE_HIT, A.NOTICE_STATE, A.DEPT_NAME, A.JOB_NAME, A.MEMBER_NO, A.DEPT_NO, A.JOB_NO, A.EMAIL_ID, A.TEL, A.BIRTHDAY, A.JOINED_AT, A.MODIFIED_AT, A.STATUS, A.DAYOFF_COUNT, A.PW, A.PROFILE_FILE_PATH, A.PROFILE_FILE_NAME
      FROM (SELECT N.NOTICE_NO, MDJ.MEMBER_NAME, N.NOTICE_TITLE, N.NOTICE_CONTENT, N.NOTICE_CREATED_AT, N.NOTICE_MODIFIED_AT, N.NOTICE_HIT, N.NOTICE_STATE, MDJ.DEPT_NAME, MDJ.JOB_NAME, MDJ.MEMBER_NO, MDJ.DEPT_NO, MDJ.JOB_NO, MDJ.EMAIL_ID, MDJ.TEL, MDJ.BIRTHDAY, MDJ.JOINED_AT, MDJ.MODIFIED_AT, MDJ.STATUS, MDJ.DAYOFF_COUNT, MDJ.PW, MDJ.PROFILE_FILE_PATH, MDJ.PROFILE_FILE_NAME
              FROM NOTICE_BOARD_T N LEFT OUTER JOIN (SELECT M.MEMBER_NO, M.DEPT_NO, M.JOB_NO, M.MEMBER_NAME, M.EMAIL_ID, M.TEL, M.BIRTHDAY, M.JOINED_AT, M.MODIFIED_AT, M.STATUS, M.DAYOFF_COUNT, M.PW, M.PROFILE_FILE_PATH, M.PROFILE_FILE_NAME, D.DEPT_NAME, J.JOB_NAME
                                                       FROM MEMBER_T M LEFT OUTER JOIN DEPARTMENT_T D
                                                         ON M.DEPT_NO = D.DEPT_NO LEFT OUTER JOIN JOB_T J
                                                         ON M.JOB_NO = J.JOB_NO) MDJ
                ON MDJ.MEMBER_NO = N.MEMBER_NO) A
     WHERE NOTICE_NO = #{noticeNo}
  </select>
  <select id="getNoticeFileList" parameterType="int" resultType="NoticeFileDTO">
    SELECT NOTICE_FILE_NO, NOTICE_NO, NOTICE_FILE_PATH, NOTICE_FILE_ORIGIN_NAME, NOTICE_FILE_SYSTEM_NAME
      FROM NOTICE_FILE_T
     WHERE NOTICE_NO = #{noticeNo}
  </select>
  
  <select id="getNoticeFileByNo" parameterType="int" resultType="NoticeFileDTO">
    SELECT NOTICE_FILE_NO, NOTICE_NO, NOTICE_FILE_PATH, NOTICE_FILE_ORIGIN_NAME, NOTICE_FILE_SYSTEM_NAME
      FROM NOTICE_FILE_T
     WHERE NOTICE_FILE_NO = #{noticeFileNo}
  </select>
  
  <!-- 이전글, 다음글 -->
  <select id="prevAndNextBoard" parameterType="int" resultType="NoticeDTO">
    SELECT A.NOTICE_NO, A.NEXTNO, A.PREVNO
      FROM(SELECT N.NOTICE_NO
              , LAG(N.NOTICE_NO, 1, 0) OVER(ORDER BY N.NOTICE_NO DESC) AS NEXTNO
              , LEAD(N.NOTICE_NO, 1, 0) OVER(ORDER BY N.NOTICE_NO DESC) AS PREVNO
           FROM NOTICE_BOARD_T N INNER JOIN MEMBER_T M
             ON M.MEMBER_NO = N.MEMBER_NO INNER JOIN JOB_T J
             ON M.JOB_NO = J.JOB_NO) A
    WHERE A.NOTICE_NO = #{noticeNo}
  </select>
  
  <insert id="addNotice" useGeneratedKeys="true" keyProperty="noticeNo" parameterType="NoticeDTO">
    INSERT INTO NOTICE_BOARD_T (
        MEMBER_NO
      , NOTICE_TITLE
      , NOTICE_CONTENT
      , NOTICE_CREATED_AT
      , NOTICE_MODIFIED_AT
      , NOTICE_HIT
      , NOTICE_STATE
    ) VALUES (
        #{memberDTO.memberNo}
      , #{noticeTitle}
      , #{noticeContent}
      , NOW()
      , NOW()
      , 0
      , 1
    )
  </insert>
  <insert id="addNoticeFile" parameterType="NoticeFileDTO">
    INSERT INTO NOTICE_FILE_T (
        NOTICE_NO
      , NOTICE_FILE_PATH
      , NOTICE_FILE_ORIGIN_NAME
      , NOTICE_FILE_SYSTEM_NAME
    ) VALUES (
        #{noticeDTO.noticeNo}
      , #{noticeFilePath}
      , #{noticeFileOriginName}
      , #{noticeFileSystemName}
    )
  </insert>
  
  <delete id="removeNotice" parameterType="int">
    DELETE
      FROM NOTICE_BOARD_T
     WHERE NOTICE_NO = #{noticeNo}
  </delete>

  <update id="modifyNotice" parameterType="NoticeDTO">
    UPDATE NOTICE_BOARD_T
       SET NOTICE_TITLE = #{noticeTitle}
         , NOTICE_CONTENT = #{noticeContent}
         , NOTICE_MODIFIED_AT = #{noticeModifiedAt}
         , NOTICE_STATE = 1
     WHERE NOTICE_NO = #{noticeNo}
  </update>
  <delete id="removeNoticeFile" parameterType="int">
    DELETE
      FROM NOTICE_FILE_T
     WHERE NOTICE_FILE_NO = #{noticeFileNo}
  </delete>


</mapper>